def img
pipeline {
    environment {
         registry = "392070207901.dkr.ecr.us-east-1.amazonaws.com/eks" 
        registryCredential = 'docker-hub-login'
        dockerImage = ''
    }
    agent any
    stages {
        stage('checkout') {
            steps {
                git 'https://github.com/nss55/eks-python.git/'
            }
        }

        stage('Build Image') {
            steps {
                script {
                    img = registry + ":${env.BUILD_ID}"
                    println ("${img}")
                    myapp = docker.build("${img}")
                }
            }
        }

       stage('Push Image to Amazon ECR') {
		steps {
			echo '----------- Push Image to Amazon ECR ---------------'
			script{
				docker.withRegistry('https://426824955559.dkr.ecr.us-east-1.amazonaws.com/eks_deploy', 'ecr:us-east-1:ecr_push'){
				   myapp.push("${env.tag}")
				}
			}
		}
        
        }

      stage('Deploy to eks'){
          steps {
	     withKubeConfig(caCertificate: '', clusterName: 'demo-eks3.us-east-1.eksctl.io', contextName: '', credentialsId: 'Testkubernetes', namespace: 'default', restrictKubeConfigAccess: false, serverUrl: 'https://046D7B6D98B946488533660207583F94.gr7.us-east-1.eks.amazonaws.com') {
                bat 'kubectl apply -f C:/ProgramData/Jenkins/.jenkins/workspace/eks/eks-deploy-k8s.yaml'
            }
          }
                 
        }

      }
    }
